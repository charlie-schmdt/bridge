// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: sfu.proto

package sfu

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SignalMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*SignalMessage_Offer
	//	*SignalMessage_Answer
	//	*SignalMessage_Candidate
	//	*SignalMessage_Join
	//	*SignalMessage_Subscribe
	Payload       isSignalMessage_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignalMessage) Reset() {
	*x = SignalMessage{}
	mi := &file_sfu_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignalMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalMessage) ProtoMessage() {}

func (x *SignalMessage) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalMessage.ProtoReflect.Descriptor instead.
func (*SignalMessage) Descriptor() ([]byte, []int) {
	return file_sfu_proto_rawDescGZIP(), []int{0}
}

func (x *SignalMessage) GetPayload() isSignalMessage_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *SignalMessage) GetOffer() *SdpOffer {
	if x != nil {
		if x, ok := x.Payload.(*SignalMessage_Offer); ok {
			return x.Offer
		}
	}
	return nil
}

func (x *SignalMessage) GetAnswer() *SdpAnswer {
	if x != nil {
		if x, ok := x.Payload.(*SignalMessage_Answer); ok {
			return x.Answer
		}
	}
	return nil
}

func (x *SignalMessage) GetCandidate() *IceCandidate {
	if x != nil {
		if x, ok := x.Payload.(*SignalMessage_Candidate); ok {
			return x.Candidate
		}
	}
	return nil
}

func (x *SignalMessage) GetJoin() *JoinRoom {
	if x != nil {
		if x, ok := x.Payload.(*SignalMessage_Join); ok {
			return x.Join
		}
	}
	return nil
}

func (x *SignalMessage) GetSubscribe() *SubscribeRequest {
	if x != nil {
		if x, ok := x.Payload.(*SignalMessage_Subscribe); ok {
			return x.Subscribe
		}
	}
	return nil
}

type isSignalMessage_Payload interface {
	isSignalMessage_Payload()
}

type SignalMessage_Offer struct {
	Offer *SdpOffer `protobuf:"bytes,1,opt,name=offer,proto3,oneof"`
}

type SignalMessage_Answer struct {
	Answer *SdpAnswer `protobuf:"bytes,2,opt,name=answer,proto3,oneof"`
}

type SignalMessage_Candidate struct {
	Candidate *IceCandidate `protobuf:"bytes,3,opt,name=candidate,proto3,oneof"`
}

type SignalMessage_Join struct {
	Join *JoinRoom `protobuf:"bytes,4,opt,name=join,proto3,oneof"`
}

type SignalMessage_Subscribe struct {
	Subscribe *SubscribeRequest `protobuf:"bytes,5,opt,name=subscribe,proto3,oneof"`
}

func (*SignalMessage_Offer) isSignalMessage_Payload() {}

func (*SignalMessage_Answer) isSignalMessage_Payload() {}

func (*SignalMessage_Candidate) isSignalMessage_Payload() {}

func (*SignalMessage_Join) isSignalMessage_Payload() {}

func (*SignalMessage_Subscribe) isSignalMessage_Payload() {}

// SDP Offer from client
type SdpOffer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sdp           string                 `protobuf:"bytes,1,opt,name=sdp,proto3" json:"sdp,omitempty"`
	ClientId      string                 `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"` // optional, useful to identify client
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SdpOffer) Reset() {
	*x = SdpOffer{}
	mi := &file_sfu_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SdpOffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SdpOffer) ProtoMessage() {}

func (x *SdpOffer) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SdpOffer.ProtoReflect.Descriptor instead.
func (*SdpOffer) Descriptor() ([]byte, []int) {
	return file_sfu_proto_rawDescGZIP(), []int{1}
}

func (x *SdpOffer) GetSdp() string {
	if x != nil {
		return x.Sdp
	}
	return ""
}

func (x *SdpOffer) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

// SDP Answer from server
type SdpAnswer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sdp           string                 `protobuf:"bytes,1,opt,name=sdp,proto3" json:"sdp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SdpAnswer) Reset() {
	*x = SdpAnswer{}
	mi := &file_sfu_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SdpAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SdpAnswer) ProtoMessage() {}

func (x *SdpAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SdpAnswer.ProtoReflect.Descriptor instead.
func (*SdpAnswer) Descriptor() ([]byte, []int) {
	return file_sfu_proto_rawDescGZIP(), []int{2}
}

func (x *SdpAnswer) GetSdp() string {
	if x != nil {
		return x.Sdp
	}
	return ""
}

// ICE candidate message
type IceCandidate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Candidate     string                 `protobuf:"bytes,1,opt,name=candidate,proto3" json:"candidate,omitempty"`
	SdpMid        string                 `protobuf:"bytes,2,opt,name=sdp_mid,json=sdpMid,proto3" json:"sdp_mid,omitempty"`
	SdpMlineIndex int32                  `protobuf:"varint,3,opt,name=sdp_mline_index,json=sdpMlineIndex,proto3" json:"sdp_mline_index,omitempty"`
	ClientId      string                 `protobuf:"bytes,4,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"` // optional
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IceCandidate) Reset() {
	*x = IceCandidate{}
	mi := &file_sfu_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IceCandidate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IceCandidate) ProtoMessage() {}

func (x *IceCandidate) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IceCandidate.ProtoReflect.Descriptor instead.
func (*IceCandidate) Descriptor() ([]byte, []int) {
	return file_sfu_proto_rawDescGZIP(), []int{3}
}

func (x *IceCandidate) GetCandidate() string {
	if x != nil {
		return x.Candidate
	}
	return ""
}

func (x *IceCandidate) GetSdpMid() string {
	if x != nil {
		return x.SdpMid
	}
	return ""
}

func (x *IceCandidate) GetSdpMlineIndex() int32 {
	if x != nil {
		return x.SdpMlineIndex
	}
	return 0
}

func (x *IceCandidate) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

// Join room message (sent at the start of call)
type JoinRoom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	ClientId      string                 `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinRoom) Reset() {
	*x = JoinRoom{}
	mi := &file_sfu_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRoom) ProtoMessage() {}

func (x *JoinRoom) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRoom.ProtoReflect.Descriptor instead.
func (*JoinRoom) Descriptor() ([]byte, []int) {
	return file_sfu_proto_rawDescGZIP(), []int{4}
}

func (x *JoinRoom) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *JoinRoom) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

// Subscribe/unsubscribe request for mid-call subscription
type SubscribeRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SubscribeTo     []string               `protobuf:"bytes,1,rep,name=subscribe_to,json=subscribeTo,proto3" json:"subscribe_to,omitempty"`             // IDs of participants to subscribe to
	UnsubscribeFrom []string               `protobuf:"bytes,2,rep,name=unsubscribe_from,json=unsubscribeFrom,proto3" json:"unsubscribe_from,omitempty"` // IDs to unsubscribe from
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	mi := &file_sfu_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_sfu_proto_rawDescGZIP(), []int{5}
}

func (x *SubscribeRequest) GetSubscribeTo() []string {
	if x != nil {
		return x.SubscribeTo
	}
	return nil
}

func (x *SubscribeRequest) GetUnsubscribeFrom() []string {
	if x != nil {
		return x.UnsubscribeFrom
	}
	return nil
}

var File_sfu_proto protoreflect.FileDescriptor

const file_sfu_proto_rawDesc = "" +
	"\n" +
	"\tsfu.proto\x12\tsignaling\"\x98\x02\n" +
	"\rSignalMessage\x12+\n" +
	"\x05offer\x18\x01 \x01(\v2\x13.signaling.SdpOfferH\x00R\x05offer\x12.\n" +
	"\x06answer\x18\x02 \x01(\v2\x14.signaling.SdpAnswerH\x00R\x06answer\x127\n" +
	"\tcandidate\x18\x03 \x01(\v2\x17.signaling.IceCandidateH\x00R\tcandidate\x12)\n" +
	"\x04join\x18\x04 \x01(\v2\x13.signaling.JoinRoomH\x00R\x04join\x12;\n" +
	"\tsubscribe\x18\x05 \x01(\v2\x1b.signaling.SubscribeRequestH\x00R\tsubscribeB\t\n" +
	"\apayload\"9\n" +
	"\bSdpOffer\x12\x10\n" +
	"\x03sdp\x18\x01 \x01(\tR\x03sdp\x12\x1b\n" +
	"\tclient_id\x18\x02 \x01(\tR\bclientId\"\x1d\n" +
	"\tSdpAnswer\x12\x10\n" +
	"\x03sdp\x18\x01 \x01(\tR\x03sdp\"\x8a\x01\n" +
	"\fIceCandidate\x12\x1c\n" +
	"\tcandidate\x18\x01 \x01(\tR\tcandidate\x12\x17\n" +
	"\asdp_mid\x18\x02 \x01(\tR\x06sdpMid\x12&\n" +
	"\x0fsdp_mline_index\x18\x03 \x01(\x05R\rsdpMlineIndex\x12\x1b\n" +
	"\tclient_id\x18\x04 \x01(\tR\bclientId\"@\n" +
	"\bJoinRoom\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12\x1b\n" +
	"\tclient_id\x18\x02 \x01(\tR\bclientId\"`\n" +
	"\x10SubscribeRequest\x12!\n" +
	"\fsubscribe_to\x18\x01 \x03(\tR\vsubscribeTo\x12)\n" +
	"\x10unsubscribe_from\x18\x02 \x03(\tR\x0funsubscribeFrom2V\n" +
	"\tSignaling\x12I\n" +
	"\rHandleSession\x12\x18.signaling.SignalMessage\x1a\x18.signaling.SignalMessage\"\x00(\x010\x01B\aZ\x05./sfub\x06proto3"

var (
	file_sfu_proto_rawDescOnce sync.Once
	file_sfu_proto_rawDescData []byte
)

func file_sfu_proto_rawDescGZIP() []byte {
	file_sfu_proto_rawDescOnce.Do(func() {
		file_sfu_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sfu_proto_rawDesc), len(file_sfu_proto_rawDesc)))
	})
	return file_sfu_proto_rawDescData
}

var file_sfu_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_sfu_proto_goTypes = []any{
	(*SignalMessage)(nil),    // 0: signaling.SignalMessage
	(*SdpOffer)(nil),         // 1: signaling.SdpOffer
	(*SdpAnswer)(nil),        // 2: signaling.SdpAnswer
	(*IceCandidate)(nil),     // 3: signaling.IceCandidate
	(*JoinRoom)(nil),         // 4: signaling.JoinRoom
	(*SubscribeRequest)(nil), // 5: signaling.SubscribeRequest
}
var file_sfu_proto_depIdxs = []int32{
	1, // 0: signaling.SignalMessage.offer:type_name -> signaling.SdpOffer
	2, // 1: signaling.SignalMessage.answer:type_name -> signaling.SdpAnswer
	3, // 2: signaling.SignalMessage.candidate:type_name -> signaling.IceCandidate
	4, // 3: signaling.SignalMessage.join:type_name -> signaling.JoinRoom
	5, // 4: signaling.SignalMessage.subscribe:type_name -> signaling.SubscribeRequest
	0, // 5: signaling.Signaling.HandleSession:input_type -> signaling.SignalMessage
	0, // 6: signaling.Signaling.HandleSession:output_type -> signaling.SignalMessage
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_sfu_proto_init() }
func file_sfu_proto_init() {
	if File_sfu_proto != nil {
		return
	}
	file_sfu_proto_msgTypes[0].OneofWrappers = []any{
		(*SignalMessage_Offer)(nil),
		(*SignalMessage_Answer)(nil),
		(*SignalMessage_Candidate)(nil),
		(*SignalMessage_Join)(nil),
		(*SignalMessage_Subscribe)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sfu_proto_rawDesc), len(file_sfu_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sfu_proto_goTypes,
		DependencyIndexes: file_sfu_proto_depIdxs,
		MessageInfos:      file_sfu_proto_msgTypes,
	}.Build()
	File_sfu_proto = out.File
	file_sfu_proto_goTypes = nil
	file_sfu_proto_depIdxs = nil
}
