syntax = "proto3";

package signaling;

service Signaling {
    rpc Session (stream SignalMessage) returns (stream SignalMessage) {}
}

message SignalMessage {
    oneof payload {
        SdpOffer offer = 1;
        SdpAnswer answer = 2;
        IceCandidate candidate = 3;
        JoinRoom join = 4;
        SubscribeRequest subscribe = 5;
    }
}

// SDP Offer from client
message SdpOffer {
    string sdp = 1;
    string client_id = 2;  // optional, useful to identify client
}

// SDP Answer from server
message SdpAnswer {
    string sdp = 1;
}

// ICE candidate message
message IceCandidate {
    string candidate = 1;
    string sdp_mid = 2;
    int32 sdp_mline_index = 3;
    string client_id = 4; // optional
}

// Join room message (sent at the start of call)
message JoinRoom {
    string room_id = 1;
    string client_id = 2;
}

// Subscribe/unsubscribe request for mid-call subscription
message SubscribeRequest {
    repeated string subscribe_to = 1;   // IDs of participants to subscribe to
    repeated string unsubscribe_from = 2; // IDs to unsubscribe from
}